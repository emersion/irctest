# This file was auto-generated by make_workflows.py.
# Do not edit it manually, modifications will be lost.

jobs:
  build-anope:
    runs-on: ubuntu-latest
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        key: 3-${{ runner.os }}-anope-stable
        path: '~/.cache

          ${ github.workspace }/anope

          '
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Checkout Anope
      uses: actions/checkout@v2
      with:
        path: anope
        ref: 2.0.9
        repository: anope/anope
    - name: Build Anope
      run: |
        cd $GITHUB_WORKSPACE/anope/
        cp $GITHUB_WORKSPACE/data/anope/* .
        CFLAGS=-O0 ./Config -quick
        make -C build -j 4
        make -C build install
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-anope.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v2
      with:
        name: installed-anope
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  build-unrealircd:
    runs-on: ubuntu-latest
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        key: 3-${{ runner.os }}-unrealircd-stable
        path: '~/.cache

          ${ github.workspace }/unrealircd

          '
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Checkout UnrealIRCd 6
      uses: actions/checkout@v2
      with:
        path: unrealircd
        ref: cedd23ae9cdd5985ce16e9869cbdb808479c3fc4
        repository: unrealircd/unrealircd
    - name: Build UnrealIRCd 6
      run: |
        cd $GITHUB_WORKSPACE/unrealircd/
        cp $GITHUB_WORKSPACE/data/unreal/* .
        # Need to use a specific -march, because GitHub has inconsistent
        # architectures across workers, which result in random SIGILL with some
        # worker combinations
        sudo apt install libsodium-dev libargon2-dev
        CFLAGS="-O0 -march=x86-64" CXXFLAGS="$CFLAGS" ./Config -quick
        make -j 4
        make install
        # Prevent download of geoIP database on first startup
        sed -i 's/loadmodule "geoip_classic";//' ~/.local/unrealircd/conf/modules.default.conf
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-unrealircd.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v2
      with:
        name: installed-unrealircd
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  build-unrealircd-5:
    runs-on: ubuntu-latest
    steps:
    - name: Create directories
      run: cd ~/; mkdir -p .local/ go/
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        key: 3-${{ runner.os }}-unrealircd-5-stable
        path: '~/.cache

          ${ github.workspace }/unrealircd

          '
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Checkout UnrealIRCd 5
      uses: actions/checkout@v2
      with:
        path: unrealircd
        ref: 6604856973f713a494f83d38992d7d61ce6b9db4
        repository: unrealircd/unrealircd
    - name: Build UnrealIRCd 5
      run: |
        cd $GITHUB_WORKSPACE/unrealircd/
        cp $GITHUB_WORKSPACE/data/unreal/* .
        # Need to use a specific -march, because GitHub has inconsistent
        # architectures across workers, which result in random SIGILL with some
        # worker combinations
        sudo apt install libsodium-dev libargon2-dev
        CFLAGS="-O0 -march=x86-64" CXXFLAGS="$CFLAGS" ./Config -quick
        make -j 4
        make install
        # Prevent download of geoIP database on first startup
        sed -i 's/loadmodule "geoip_classic";//' ~/.local/unrealircd/conf/modules.default.conf
    - name: Make artefact tarball
      run: cd ~; tar -czf artefacts-unrealircd-5.tar.gz .local/ go/
    - name: Upload build artefacts
      uses: actions/upload-artifact@v2
      with:
        name: installed-unrealircd-5
        path: ~/artefacts-*.tar.gz
        retention-days: 1
  publish-test-results:
    if: success() || failure()
    name: Publish Dashboard
    needs:
    - test-unrealircd
    - test-unrealircd-5
    - test-unrealircd-dlk
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts
    - name: Install dashboard dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install defusedxml docutils -r requirements.txt
    - name: Generate dashboard
      run: |-
        shopt -s globstar
        python3 -m irctest.dashboard.format dashboard/ artifacts/**/*.xml
        echo '/ /index.xhtml' > dashboard/_redirects
    - name: Install netlify-cli
      run: npm i -g netlify-cli
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      name: Deploy to Netlify
      run: ./.github/deploy_to_netlify.py
  test-unrealircd:
    needs:
    - build-unrealircd
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Download build artefacts
      uses: actions/download-artifact@v2
      with:
        name: installed-unrealircd
        path: '~'
    - name: Unpack artefacts
      run: cd ~; find -name 'artefacts-*.tar.gz' -exec tar -xzf '{}' \;
    - name: Install system dependencies
      run: sudo apt-get install atheme-services faketime
    - name: Install irctest dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install pytest pytest-xdist -r requirements.txt
    - name: Test with pytest
      run: PYTEST_ARGS='--junit-xml pytest.xml' PATH=$HOME/.local/bin:$PATH  PATH=~/.local/unrealircd/sbin:~/.local/unrealircd/bin:$PATH
        make unrealircd
      timeout-minutes: 30
    - if: always()
      name: Publish results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results_unrealircd_stable
        path: pytest.xml
  test-unrealircd-5:
    needs:
    - build-unrealircd-5
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Download build artefacts
      uses: actions/download-artifact@v2
      with:
        name: installed-unrealircd-5
        path: '~'
    - name: Unpack artefacts
      run: cd ~; find -name 'artefacts-*.tar.gz' -exec tar -xzf '{}' \;
    - name: Install system dependencies
      run: sudo apt-get install atheme-services faketime
    - name: Install irctest dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install pytest pytest-xdist -r requirements.txt
    - name: Test with pytest
      run: PYTEST_ARGS='--junit-xml pytest.xml' PATH=$HOME/.local/bin:$PATH  PATH=~/.local/unrealircd/sbin:~/.local/unrealircd/bin:$PATH
        make unrealircd-5
      timeout-minutes: 30
    - if: always()
      name: Publish results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results_unrealircd-5_stable
        path: pytest.xml
  test-unrealircd-dlk:
    needs:
    - build-unrealircd
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Download build artefacts
      uses: actions/download-artifact@v2
      with:
        name: installed-unrealircd
        path: '~'
    - name: Unpack artefacts
      run: cd ~; find -name 'artefacts-*.tar.gz' -exec tar -xzf '{}' \;
    - name: Checkout Dlk
      uses: actions/checkout@v2
      with:
        path: Dlk-Services
        ref: 8868473ad1ee03c56aac1e6a7f85ed11b8cb2ef7
        repository: DalekIRC/Dalek-Services
    - name: Build Dlk
      run: |
        pip install pifpaf
        wget -q https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        wget -q https://wordpress.org/latest.zip -O wordpress-latest.zip
    - name: Install system dependencies
      run: sudo apt-get install atheme-services faketime
    - name: Install irctest dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install pytest pytest-xdist -r requirements.txt
    - name: Test with pytest
      run: PYTEST_ARGS='--junit-xml pytest.xml' PATH=$HOME/.local/bin:$PATH  PATH=~/.local/unrealircd/sbin:~/.local/unrealircd/bin:$PATH
        IRCTEST_DLK_PATH="${{ github.workspace }}/Dlk-Services" IRCTEST_WP_CLI_PATH="${{
        github.workspace }}/wp-cli.phar" IRCTEST_WP_ZIP_PATH="${{ github.workspace
        }}/wordpress-latest.zip" make unrealircd-dlk
      timeout-minutes: 30
    - if: always()
      name: Publish results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results_unrealircd-dlk_stable
        path: pytest.xml
name: irctest with stable versions
'on':
  pull_request: null
  push: null
